### YamlMime:ManagedReference
items:
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute
  commentId: T:Ubiety.Scram.Core.Attributes.ScramAttribute
  id: ScramAttribute
  parent: Ubiety.Scram.Core.Attributes
  children:
  - Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor(System.Char)
  - Ubiety.Scram.Core.Attributes.ScramAttribute.AuthorizationIdentityName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.ChannelName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.ClientProofName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.ErrorName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.IterationsName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.MessageName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.Name
  - Ubiety.Scram.Core.Attributes.ScramAttribute.NonceName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.Parse(System.String)
  - Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll(System.Collections.Generic.IEnumerable{System.String})
  - Ubiety.Scram.Core.Attributes.ScramAttribute.SaltName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.ServerSignatureName
  - Ubiety.Scram.Core.Attributes.ScramAttribute.UserName
  langs:
  - csharp
  - vb
  name: ScramAttribute
  nameWithType: ScramAttribute
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute
  type: Class
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ScramAttribute
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 34
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nBase scram attribute.\n"
  example: []
  syntax:
    content: public class ScramAttribute
    content.vb: Public Class ScramAttribute
  inheritance:
  - System.Object
  derivedClasses:
  - Ubiety.Scram.Core.Attributes.ScramAttribute`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.AuthorizationIdentityName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.AuthorizationIdentityName
  id: AuthorizationIdentityName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: AuthorizationIdentityName
  nameWithType: ScramAttribute.AuthorizationIdentityName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.AuthorizationIdentityName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: AuthorizationIdentityName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 39
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nAuthorization identity attribute name.\n"
  example: []
  syntax:
    content: protected const char AuthorizationIdentityName = 'a'
    return:
      type: System.Char
    content.vb: Protected Const AuthorizationIdentityName As Char = "a"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.UserName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.UserName
  id: UserName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: ScramAttribute.UserName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.UserName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: UserName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 44
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nUser attribute name.\n"
  example: []
  syntax:
    content: protected const char UserName = 'n'
    return:
      type: System.Char
    content.vb: Protected Const UserName As Char = "n"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.MessageName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.MessageName
  id: MessageName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: MessageName
  nameWithType: ScramAttribute.MessageName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.MessageName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: MessageName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 49
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nMessage attribute name.\n"
  example: []
  syntax:
    content: protected const char MessageName = 'm'
    return:
      type: System.Char
    content.vb: Protected Const MessageName As Char = "m"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.NonceName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.NonceName
  id: NonceName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: NonceName
  nameWithType: ScramAttribute.NonceName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.NonceName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: NonceName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 54
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nNonce attribute name.\n"
  example: []
  syntax:
    content: protected const char NonceName = 'r'
    return:
      type: System.Char
    content.vb: Protected Const NonceName As Char = "r"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ChannelName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.ChannelName
  id: ChannelName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: ScramAttribute.ChannelName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ChannelName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ChannelName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 59
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nChannel attribute name.\n"
  example: []
  syntax:
    content: protected const char ChannelName = 'c'
    return:
      type: System.Char
    content.vb: Protected Const ChannelName As Char = "c"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.SaltName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.SaltName
  id: SaltName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: SaltName
  nameWithType: ScramAttribute.SaltName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.SaltName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: SaltName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 64
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nSalt attribute name.\n"
  example: []
  syntax:
    content: protected const char SaltName = 's'
    return:
      type: System.Char
    content.vb: Protected Const SaltName As Char = "s"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.IterationsName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.IterationsName
  id: IterationsName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: IterationsName
  nameWithType: ScramAttribute.IterationsName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.IterationsName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: IterationsName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 69
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nIterations attribute name.\n"
  example: []
  syntax:
    content: protected const char IterationsName = 'i'
    return:
      type: System.Char
    content.vb: Protected Const IterationsName As Char = "i"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ClientProofName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.ClientProofName
  id: ClientProofName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ClientProofName
  nameWithType: ScramAttribute.ClientProofName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ClientProofName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ClientProofName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 74
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nClient proof attribute name.\n"
  example: []
  syntax:
    content: protected const char ClientProofName = 'p'
    return:
      type: System.Char
    content.vb: Protected Const ClientProofName As Char = "p"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ServerSignatureName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.ServerSignatureName
  id: ServerSignatureName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ServerSignatureName
  nameWithType: ScramAttribute.ServerSignatureName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ServerSignatureName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ServerSignatureName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 79
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nServer signature attribute name.\n"
  example: []
  syntax:
    content: protected const char ServerSignatureName = 'v'
    return:
      type: System.Char
    content.vb: Protected Const ServerSignatureName As Char = "v"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ErrorName
  commentId: F:Ubiety.Scram.Core.Attributes.ScramAttribute.ErrorName
  id: ErrorName
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ErrorName
  nameWithType: ScramAttribute.ErrorName
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ErrorName
  type: Field
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ErrorName
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 84
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nError attribute name.\n"
  example: []
  syntax:
    content: protected const char ErrorName = 'e'
    return:
      type: System.Char
    content.vb: Protected Const ErrorName As Char = "e"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor(System.Char)
  commentId: M:Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ScramAttribute(Char)
  nameWithType: ScramAttribute.ScramAttribute(Char)
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ScramAttribute(System.Char)
  type: Constructor
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: .ctor
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 90
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nInitializes a new instance of the <xref href=\"Ubiety.Scram.Core.Attributes.ScramAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ScramAttribute(char name)
    parameters:
    - id: name
      type: System.Char
      description: Attribute name.
    content.vb: Public Sub New(name As Char)
  overload: Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.Name
  commentId: P:Ubiety.Scram.Core.Attributes.ScramAttribute.Name
  id: Name
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ScramAttribute.Name
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.Name
  type: Property
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: Name
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 98
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nGets the attribute name.\n"
  example: []
  syntax:
    content: public char Name { get; }
    parameters: []
    return:
      type: System.Char
    content.vb: Public ReadOnly Property Name As Char
  overload: Ubiety.Scram.Core.Attributes.ScramAttribute.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll(System.Collections.Generic.IEnumerable{System.String})
  id: ParseAll(System.Collections.Generic.IEnumerable{System.String})
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: ParseAll(IEnumerable<String>)
  nameWithType: ScramAttribute.ParseAll(IEnumerable<String>)
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: ParseAll
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 105
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nParse all the attributes.\n"
  example: []
  syntax:
    content: public static ICollection<ScramAttribute> ParseAll(IEnumerable<string> attributes)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of attribute strings to parse.
    return:
      type: System.Collections.Generic.ICollection{Ubiety.Scram.Core.Attributes.ScramAttribute}
      description: List of attribute classes.
    content.vb: Public Shared Function ParseAll(attributes As IEnumerable(Of String)) As ICollection(Of ScramAttribute)
  overload: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll*
  nameWithType.vb: ScramAttribute.ParseAll(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ParseAll(IEnumerable(Of String))
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.Parse(System.String)
  commentId: M:Ubiety.Scram.Core.Attributes.ScramAttribute.Parse(System.String)
  id: Parse(System.String)
  parent: Ubiety.Scram.Core.Attributes.ScramAttribute
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: ScramAttribute.Parse(String)
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
      branch: master
      repo: git@github.com:ubiety/Ubiety.Scram.Core
    id: Parse
    path: ../../src/Ubiety.Scram.Core/Attributes/ScramAttribute.cs
    startLine: 115
  assemblies:
  - Ubiety.Scram.Core
  namespace: Ubiety.Scram.Core.Attributes
  summary: "\nParse an attribute.\n"
  example: []
  syntax:
    content: public static ScramAttribute Parse(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: String value of the attribute.
    return:
      type: Ubiety.Scram.Core.Attributes.ScramAttribute
      description: Attribute class.
    content.vb: Public Shared Function Parse(attribute As String) As ScramAttribute
  overload: Ubiety.Scram.Core.Attributes.ScramAttribute.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Ubiety.Scram.Core.Attributes
  commentId: N:Ubiety.Scram.Core.Attributes
  name: Ubiety.Scram.Core.Attributes
  nameWithType: Ubiety.Scram.Core.Attributes
  fullName: Ubiety.Scram.Core.Attributes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute
  commentId: T:Ubiety.Scram.Core.Attributes.ScramAttribute
  parent: Ubiety.Scram.Core.Attributes
  name: ScramAttribute
  nameWithType: ScramAttribute
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor*
  commentId: Overload:Ubiety.Scram.Core.Attributes.ScramAttribute.#ctor
  name: ScramAttribute
  nameWithType: ScramAttribute.ScramAttribute
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ScramAttribute
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.Name*
  commentId: Overload:Ubiety.Scram.Core.Attributes.ScramAttribute.Name
  name: Name
  nameWithType: ScramAttribute.Name
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.Name
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll*
  commentId: Overload:Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll
  name: ParseAll
  nameWithType: ScramAttribute.ParseAll
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.ParseAll
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Ubiety.Scram.Core.Attributes.ScramAttribute}
  commentId: T:System.Collections.Generic.ICollection{Ubiety.Scram.Core.Attributes.ScramAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ScramAttribute>
  nameWithType: ICollection<ScramAttribute>
  fullName: System.Collections.Generic.ICollection<Ubiety.Scram.Core.Attributes.ScramAttribute>
  nameWithType.vb: ICollection(Of ScramAttribute)
  fullName.vb: System.Collections.Generic.ICollection(Of Ubiety.Scram.Core.Attributes.ScramAttribute)
  name.vb: ICollection(Of ScramAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Ubiety.Scram.Core.Attributes.ScramAttribute
    name: ScramAttribute
    nameWithType: ScramAttribute
    fullName: Ubiety.Scram.Core.Attributes.ScramAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Ubiety.Scram.Core.Attributes.ScramAttribute
    name: ScramAttribute
    nameWithType: ScramAttribute
    fullName: Ubiety.Scram.Core.Attributes.ScramAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Ubiety.Scram.Core.Attributes.ScramAttribute.Parse*
  commentId: Overload:Ubiety.Scram.Core.Attributes.ScramAttribute.Parse
  name: Parse
  nameWithType: ScramAttribute.Parse
  fullName: Ubiety.Scram.Core.Attributes.ScramAttribute.Parse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
